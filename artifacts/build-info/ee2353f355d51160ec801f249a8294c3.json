{
  "id": "ee2353f355d51160ec801f249a8294c3",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.11",
  "solcLongVersion": "0.8.11+commit.d7f03943",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mocks/ConstructorParams.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@thirdweb-dev/contracts/ThirdwebContract.sol\";\r\n\r\ncontract ConstructorParams is ThirdwebContract {\r\n    bytes32 public immutable contractUri;\r\n    uint256 contractId;\r\n\r\n    constructor(bytes32 uri, uint256 someId) {\r\n        contractUri = uri;\r\n        contractId = someId;\r\n    }\r\n}\r\n"
      },
      "@thirdweb-dev/contracts/ThirdwebContract.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./feature/Ownable.sol\";\nimport \"./interfaces/IContractDeployer.sol\";\n\ncontract ThirdwebContract is Ownable {\n    uint256 private hasSetOwner;\n\n    /// @dev Initializes the owner of the contract.\n    function tw_initializeOwner(address deployer) external {\n        require(hasSetOwner == 0, \"Owner already initialized\");\n        hasSetOwner = 1;\n        owner = deployer;\n    }\n\n    /// @dev Returns whether owner can be set\n    function _canSetOwner() internal virtual override returns (bool) {\n        return msg.sender == owner;\n    }\n\n    /// @dev Enable access to the original contract deployer in the constructor. If this function is called outside of a constructor, it will return address(0) instead.\n    function _contractDeployer() internal view returns (address) {\n        if (address(this).code.length == 0) {\n            try IContractDeployer(msg.sender).getContractDeployer(address(this)) returns (address deployer) {\n                return deployer;\n            } catch {\n                return address(0);\n            }\n        }\n        return address(0);\n    }\n}\n"
      },
      "@thirdweb-dev/contracts/feature/Ownable.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./interface/IOwnable.sol\";\n\nabstract contract Ownable is IOwnable {\n    /// @dev Owner of the contract (purpose: OpenSea compatibility)\n    address public override owner;\n\n    /// @dev Lets a contract admin set a new owner for the contract. The new owner must be a contract admin.\n    function setOwner(address _newOwner) external override {\n        require(_canSetOwner(), \"Not authorized\");\n        _setupOwner(_newOwner);\n    }\n\n    /// @dev Lets a contract admin set a new owner for the contract. The new owner must be a contract admin.\n    function _setupOwner(address _newOwner) internal {\n        address _prevOwner = owner;\n        owner = _newOwner;\n\n        emit OwnerUpdated(_prevOwner, _newOwner);\n    }\n\n    /// @dev Returns whether owner can be set in the given execution context.\n    function _canSetOwner() internal virtual returns (bool);\n}\n"
      },
      "@thirdweb-dev/contracts/interfaces/IContractDeployer.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ninterface IContractDeployer {\n    /// @dev Emitted when the registry is paused.\n    event Paused(bool isPaused);\n\n    /// @dev Emitted when a contract is deployed.\n    event ContractDeployed(address indexed deployer, address indexed publisher, address deployedContract);\n\n    /**\n     *  @notice Deploys an instance of a published contract directly.\n     *\n     *  @param publisher        The address of the publisher.\n     *  @param contractBytecode The bytecode of the contract to deploy.\n     *  @param constructorArgs  The encoded constructor args to deploy the contract with.\n     *  @param salt             The salt to use in the CREATE2 contract deployment.\n     *  @param value            The native token value to pass to the contract on deployment.\n     *  @param publishMetadataUri     The publish metadata URI for the contract to deploy.\n     *\n     *  @return deployedAddress The address of the contract deployed.\n     */\n    function deployInstance(\n        address publisher,\n        bytes memory contractBytecode,\n        bytes memory constructorArgs,\n        bytes32 salt,\n        uint256 value,\n        string memory publishMetadataUri\n    ) external returns (address deployedAddress);\n\n    /**\n     *  @notice Deploys a clone pointing to an implementation of a published contract.\n     *\n     *  @param publisher        The address of the publisher.\n     *  @param implementation   The contract implementation for the clone to point to.\n     *  @param initializeData   The encoded function call to initialize the contract with.\n     *  @param salt             The salt to use in the CREATE2 contract deployment.\n     *  @param value            The native token value to pass to the contract on deployment.\n     *  @param publishMetadataUri     The publish metadata URI and for the contract to deploy.\n     *\n     *  @return deployedAddress The address of the contract deployed.\n     */\n    function deployInstanceProxy(\n        address publisher,\n        address implementation,\n        bytes memory initializeData,\n        bytes32 salt,\n        uint256 value,\n        string memory publishMetadataUri\n    ) external returns (address deployedAddress);\n\n    function getContractDeployer(address _contract) external view returns (address);\n}\n"
      },
      "@thirdweb-dev/contracts/feature/interface/IOwnable.sol": {
        "content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n    /// @dev Returns the owner of the contract.\n    function owner() external view returns (address);\n\n    /// @dev Lets a module admin set a new owner for the contract. The new owner must be a module admin.\n    function setOwner(address _newOwner) external;\n\n    /// @dev Emitted when a new Owner is set.\n    event OwnerUpdated(address prevOwner, address newOwner);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@thirdweb-dev/contracts/ThirdwebContract.sol": {
        "ThirdwebContract": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "prevOwner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                }
              ],
              "name": "tw_initializeOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061025f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806310ce19a41461004657806313af40351461005b5780638da5cb5b1461006e575b600080fd5b6100596100543660046101f9565b61009d565b005b6100596100693660046101f9565b610125565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154156100f25760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b600180556000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a656400000000000000000000000000000000000060448201526064016100e9565b6101888161018b565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76910160405180910390a15050565b60006020828403121561020b57600080fd5b81356001600160a01b038116811461022257600080fd5b939250505056fea2646970667358221220cf59c17584248eb311393a8c4fd8593b260d49a9a3a528bfbea4e755b7bd365164736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CE19A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x188 DUP2 PUSH2 0x18B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSIZE 0xC1 PUSH22 0x84248EB311393A8C4FD8593B260D49A9A3A528BFBEA4 0xE7 SSTORE 0xB7 0xBD CALLDATASIZE MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "142:1008:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_canSetOwner_42": {
                  "entryPoint": null,
                  "id": 42,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_setupOwner_137": {
                  "entryPoint": 395,
                  "id": 137,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_99": {
                  "entryPoint": null,
                  "id": 99,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setOwner_117": {
                  "entryPoint": 293,
                  "id": 117,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@tw_initializeOwner_29": {
                  "entryPoint": 157,
                  "id": 29,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 505,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1585:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:239:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "231:42:5",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:54:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:65:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:73:5"
                              },
                              "nodeType": "YulIf",
                              "src": "200:93:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "302:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14:309:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "429:125:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "439:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "451:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "462:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "447:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "447:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "481:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "496:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "504:42:5",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "492:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "492:55:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "474:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "474:74:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "474:74:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "398:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "409:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "420:4:5",
                            "type": ""
                          }
                        ],
                        "src": "328:226:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "733:175:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "750:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "761:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "743:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "743:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "743:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "784:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "795:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "780:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "780:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "800:2:5",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "773:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "773:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "773:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "823:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "834:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "819:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "819:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e657220616c726561647920696e697469616c697a6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "839:27:5",
                                    "type": "",
                                    "value": "Owner already initialized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "812:55:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "812:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "876:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "888:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "899:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "884:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "884:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "876:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "710:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "724:4:5",
                            "type": ""
                          }
                        ],
                        "src": "559:349:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1087:164:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1104:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1115:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1097:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1097:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1138:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1149:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1134:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1134:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1154:2:5",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1127:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1127:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1127:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1177:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1188:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1173:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1173:18:5"
                                  },
                                  {
                                    "hexValue": "4e6f7420617574686f72697a6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1193:16:5",
                                    "type": "",
                                    "value": "Not authorized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1166:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1166:44:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1166:44:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1219:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1231:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1242:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1227:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1064:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1078:4:5",
                            "type": ""
                          }
                        ],
                        "src": "913:338:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1385:198:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1395:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1407:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1418:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1403:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1403:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1395:4:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1430:52:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1440:42:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1434:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1498:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1513:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1521:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1509:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1509:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1491:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1491:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1491:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1545:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1556:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1541:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1541:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1565:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1573:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1561:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1561:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1534:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1534:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1534:43:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1346:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1357:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1365:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1376:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1256:327:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806310ce19a41461004657806313af40351461005b5780638da5cb5b1461006e575b600080fd5b6100596100543660046101f9565b61009d565b005b6100596100693660046101f9565b610125565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600154156100f25760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b600180556000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a656400000000000000000000000000000000000060448201526064016100e9565b6101888161018b565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76910160405180910390a15050565b60006020828403121561020b57600080fd5b81356001600160a01b038116811461022257600080fd5b939250505056fea2646970667358221220cf59c17584248eb311393a8c4fd8593b260d49a9a3a528bfbea4e755b7bd365164736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CE19A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x188 DUP2 PUSH2 0x18B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF MSIZE 0xC1 PUSH22 0x84248EB311393A8C4FD8593B260D49A9A3A528BFBEA4 0xE7 SSTORE 0xB7 0xBD CALLDATASIZE MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
              "sourceMap": "142:1008:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:177;;;;;;:::i;:::-;;:::i;:::-;;357:145:1;;;;;;:::i;:::-;;:::i;212:29::-;;;;;-1:-1:-1;;;;;212:29:1;;;;;;-1:-1:-1;;;;;492:55:5;;;474:74;;462:2;447:18;212:29:1;;;;;;;271:177:0;344:11;;:16;336:54;;;;-1:-1:-1;;;336:54:0;;761:2:5;336:54:0;;;743:21:5;800:2;780:18;;;773:30;839:27;819:18;;;812:55;884:18;;336:54:0;;;;;;;;;414:1;400:15;;425:5;:16;;-1:-1:-1;;425:16:0;-1:-1:-1;;;;;425:16:0;;;;;;;;;;271:177::o;357:145:1:-;559:4:0;596:5;-1:-1:-1;;;;;596:5:0;582:10;:19;422:41:1;;;;-1:-1:-1;;;422:41:1;;1115:2:5;422:41:1;;;1097:21:5;1154:2;1134:18;;;1127:30;1193:16;1173:18;;;1166:44;1227:18;;422:41:1;913:338:5;422:41:1;473:22;485:9;473:11;:22::i;:::-;357:145;:::o;617:170::-;676:18;697:5;;-1:-1:-1;;;;;712:17:1;;;-1:-1:-1;;712:17:1;;;;;;;745:35;;;697:5;;;;1491:34:5;;;1556:2;1541:18;;1534:43;;;;745:35:1;;1403:18:5;745:35:1;;;;;;;666:121;617:170;:::o;14:309:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:5:o"
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035",
              "tw_initializeOwner(address)": "10ce19a4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"tw_initializeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setOwner(address)\":{\"details\":\"Lets a contract admin set a new owner for the contract. The new owner must be a contract admin.\"},\"tw_initializeOwner(address)\":{\"details\":\"Initializes the owner of the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/ThirdwebContract.sol\":\"ThirdwebContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/ThirdwebContract.sol\":{\"keccak256\":\"0x0da29b16a67c01f708943d11b1e42b9bdf9c6d99395401845d9f00530e22753f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b0e86391f7dc937c3ff50324b30c49ed6f58399f45cf47529bc312326646e617\",\"dweb:/ipfs/QmefoozzLddJpDXkLVZ8QF1FjaN6isxt3GTcgourR1kVBn\"]},\"@thirdweb-dev/contracts/feature/Ownable.sol\":{\"keccak256\":\"0xb5d6c19ca84a3ab6030fc752098ab55a80bff67ee76f0ef3986b0a8a1b054750\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac01c088a1af1ec9c84d9211c9f11c24c343ca629a2ed51df821ba02b64a9f21\",\"dweb:/ipfs/QmUroZuiC6yWFXUt2ANhn8ey2o9xoSeK4z2ZMgHx1JAu5j\"]},\"@thirdweb-dev/contracts/feature/interface/IOwnable.sol\":{\"keccak256\":\"0x2c3ea8c3c1688337d3eacf55b055b51689ab03d6906366e0a8c6959b4794d7c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4136249c9207296acc87bf1ea0999ddf786570efe1fd6986ba9347c9998d7a3d\",\"dweb:/ipfs/Qmd726Pcis1DUtuac6VwHuMKodGt8FhtMZm7BXjdx8EX6a\"]},\"@thirdweb-dev/contracts/interfaces/IContractDeployer.sol\":{\"keccak256\":\"0x2b883cf46f6cbf1a162e4ff5fb9f9f31dbf6d85d6c4417ddf0e2376af13d63ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4bd2edacff3d7a7a28987b5bea0cb0fd005db858ac542efcff8af3f806102389\",\"dweb:/ipfs/QmTdc27PFikNeFTKiCDbPHGST5mpe2K6UMqjy7cR5j5RY6\"]}},\"version\":1}"
        }
      },
      "@thirdweb-dev/contracts/feature/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "prevOwner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setOwner(address)\":{\"details\":\"Lets a contract admin set a new owner for the contract. The new owner must be a contract admin.\"}},\"stateVariables\":{\"owner\":{\"details\":\"Owner of the contract (purpose: OpenSea compatibility)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/feature/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/feature/Ownable.sol\":{\"keccak256\":\"0xb5d6c19ca84a3ab6030fc752098ab55a80bff67ee76f0ef3986b0a8a1b054750\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac01c088a1af1ec9c84d9211c9f11c24c343ca629a2ed51df821ba02b64a9f21\",\"dweb:/ipfs/QmUroZuiC6yWFXUt2ANhn8ey2o9xoSeK4z2ZMgHx1JAu5j\"]},\"@thirdweb-dev/contracts/feature/interface/IOwnable.sol\":{\"keccak256\":\"0x2c3ea8c3c1688337d3eacf55b055b51689ab03d6906366e0a8c6959b4794d7c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4136249c9207296acc87bf1ea0999ddf786570efe1fd6986ba9347c9998d7a3d\",\"dweb:/ipfs/Qmd726Pcis1DUtuac6VwHuMKodGt8FhtMZm7BXjdx8EX6a\"]}},\"version\":1}"
        }
      },
      "@thirdweb-dev/contracts/feature/interface/IOwnable.sol": {
        "IOwnable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "prevOwner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnerUpdated(address,address)\":{\"details\":\"Emitted when a new Owner is set.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"setOwner(address)\":{\"details\":\"Lets a module admin set a new owner for the contract. The new owner must be a module admin.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/feature/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/feature/interface/IOwnable.sol\":{\"keccak256\":\"0x2c3ea8c3c1688337d3eacf55b055b51689ab03d6906366e0a8c6959b4794d7c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4136249c9207296acc87bf1ea0999ddf786570efe1fd6986ba9347c9998d7a3d\",\"dweb:/ipfs/Qmd726Pcis1DUtuac6VwHuMKodGt8FhtMZm7BXjdx8EX6a\"]}},\"version\":1}"
        }
      },
      "@thirdweb-dev/contracts/interfaces/IContractDeployer.sol": {
        "IContractDeployer": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "publisher",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "deployedContract",
                  "type": "address"
                }
              ],
              "name": "ContractDeployed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isPaused",
                  "type": "bool"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "publisher",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "contractBytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "constructorArgs",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "publishMetadataUri",
                  "type": "string"
                }
              ],
              "name": "deployInstance",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "deployedAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "publisher",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initializeData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "publishMetadataUri",
                  "type": "string"
                }
              ],
              "name": "deployInstanceProxy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "deployedAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                }
              ],
              "name": "getContractDeployer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deployInstance(address,bytes,bytes,bytes32,uint256,string)": "28f84d4c",
              "deployInstanceProxy(address,address,bytes,bytes32,uint256,string)": "9e69e62f",
              "getContractDeployer(address)": "bf775fb2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployedContract\",\"type\":\"address\"}],\"name\":\"ContractDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"contractBytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"publishMetadataUri\",\"type\":\"string\"}],\"name\":\"deployInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializeData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"publishMetadataUri\",\"type\":\"string\"}],\"name\":\"deployInstanceProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"getContractDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractDeployed(address,address,address)\":{\"details\":\"Emitted when a contract is deployed.\"},\"Paused(bool)\":{\"details\":\"Emitted when the registry is paused.\"}},\"kind\":\"dev\",\"methods\":{\"deployInstance(address,bytes,bytes,bytes32,uint256,string)\":{\"params\":{\"constructorArgs\":\"The encoded constructor args to deploy the contract with.\",\"contractBytecode\":\"The bytecode of the contract to deploy.\",\"publishMetadataUri\":\"The publish metadata URI for the contract to deploy.\",\"publisher\":\"The address of the publisher.\",\"salt\":\"The salt to use in the CREATE2 contract deployment.\",\"value\":\"The native token value to pass to the contract on deployment.\"},\"returns\":{\"deployedAddress\":\"The address of the contract deployed.\"}},\"deployInstanceProxy(address,address,bytes,bytes32,uint256,string)\":{\"params\":{\"implementation\":\"The contract implementation for the clone to point to.\",\"initializeData\":\"The encoded function call to initialize the contract with.\",\"publishMetadataUri\":\"The publish metadata URI and for the contract to deploy.\",\"publisher\":\"The address of the publisher.\",\"salt\":\"The salt to use in the CREATE2 contract deployment.\",\"value\":\"The native token value to pass to the contract on deployment.\"},\"returns\":{\"deployedAddress\":\"The address of the contract deployed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deployInstance(address,bytes,bytes,bytes32,uint256,string)\":{\"notice\":\"Deploys an instance of a published contract directly.\"},\"deployInstanceProxy(address,address,bytes,bytes32,uint256,string)\":{\"notice\":\"Deploys a clone pointing to an implementation of a published contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/interfaces/IContractDeployer.sol\":\"IContractDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/interfaces/IContractDeployer.sol\":{\"keccak256\":\"0x2b883cf46f6cbf1a162e4ff5fb9f9f31dbf6d85d6c4417ddf0e2376af13d63ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4bd2edacff3d7a7a28987b5bea0cb0fd005db858ac542efcff8af3f806102389\",\"dweb:/ipfs/QmTdc27PFikNeFTKiCDbPHGST5mpe2K6UMqjy7cR5j5RY6\"]}},\"version\":1}"
        }
      },
      "contracts/mocks/ConstructorParams.sol": {
        "ConstructorParams": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "uri",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "someId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "prevOwner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "contractUri",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "setOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                }
              ],
              "name": "tw_initializeOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_251": {
                  "entryPoint": null,
                  "id": 251,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_bytes32t_uint256_fromMemory": {
                  "entryPoint": 61,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:261:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "112:147:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "158:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "167:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "170:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "160:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "160:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "160:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "133:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "142:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "129:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "129:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "154:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "125:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "122:52:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "183:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "199:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "193:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "193:16:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "183:6:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "218:35:5",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "238:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "234:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "234:18:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:5:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:25:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "218:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "70:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "81:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "93:6:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "101:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14:245:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b5060405161031b38038061031b83398101604081905261002f9161003d565b608091909152600255610061565b6000806040838503121561005057600080fd5b505080516020909101519092909150565b6080516102a061007b600039600060ae01526102a06000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806310ce19a41461005157806313af4035146100665780638da5cb5b14610079578063c0e24d5e146100a9575b600080fd5b61006461005f36600461023a565b6100de565b005b61006461007436600461023a565b610166565b60005461008c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d07f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100a0565b600154156101335760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b600180556000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161012a565b6101c9816101cc565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76910160405180910390a15050565b60006020828403121561024c57600080fd5b81356001600160a01b038116811461026357600080fd5b939250505056fea26469706673582212208da42943df066d011274179073ae32821b0a91dfe7b937dc5c887e5115a4899164736f6c634300080b0033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x31B CODESIZE SUB DUP1 PUSH2 0x31B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x3D JUMP JUMPDEST PUSH1 0x80 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SSTORE PUSH2 0x61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2A0 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xAE ADD MSTORE PUSH2 0x2A0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CE19A4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xC0E24D5E EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x1CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 LOG4 0x29 NUMBER 0xDF MOD PUSH14 0x11274179073AE32821B0A91DFE7 0xB9 CALLDATACOPY 0xDC 0x5C DUP9 PUSH31 0x5115A4899164736F6C634300080B0033000000000000000000000000000000 ",
              "sourceMap": "118:234:4:-:0;;;242:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;294:17;;;;;322:10;:19;118:234;;14:245:5;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:5;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:5:o;:::-;118:234:4;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_canSetOwner_42": {
                  "entryPoint": null,
                  "id": 42,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_setupOwner_137": {
                  "entryPoint": 460,
                  "id": 137,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@contractUri_233": {
                  "entryPoint": null,
                  "id": 233,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_99": {
                  "entryPoint": null,
                  "id": 99,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setOwner_117": {
                  "entryPoint": 358,
                  "id": 117,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@tw_initializeOwner_29": {
                  "entryPoint": 222,
                  "id": 29,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 570,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1767:5",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:5",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:239:5",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:5"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:5"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:5"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:5"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:5"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:5"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "231:42:5",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:54:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:65:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:73:5"
                              },
                              "nodeType": "YulIf",
                              "src": "200:93:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "302:15:5",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:5"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:5",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:5",
                            "type": ""
                          }
                        ],
                        "src": "14:309:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "429:125:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "439:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "451:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "462:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "447:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "447:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "481:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "496:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "504:42:5",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "492:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "492:55:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "474:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "474:74:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "474:74:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "398:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "409:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "420:4:5",
                            "type": ""
                          }
                        ],
                        "src": "328:226:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "660:76:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "670:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "682:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "693:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "678:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "678:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "670:4:5"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "712:9:5"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "723:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "705:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "705:25:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "705:25:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "629:9:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "640:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "651:4:5",
                            "type": ""
                          }
                        ],
                        "src": "559:177:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "915:175:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "932:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "943:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "925:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "925:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "966:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "977:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "962:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "962:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "982:2:5",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "955:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "955:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "955:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1005:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1016:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1001:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1001:18:5"
                                  },
                                  {
                                    "hexValue": "4f776e657220616c726561647920696e697469616c697a6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1021:27:5",
                                    "type": "",
                                    "value": "Owner already initialized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "994:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "994:55:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "994:55:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1058:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1070:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1081:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1066:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1066:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1058:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "892:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "906:4:5",
                            "type": ""
                          }
                        ],
                        "src": "741:349:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1269:164:5",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1286:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1297:2:5",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1279:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1279:21:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1279:21:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1320:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1331:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1316:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1316:18:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1336:2:5",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1309:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1309:30:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1309:30:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1359:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1370:2:5",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1355:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1355:18:5"
                                  },
                                  {
                                    "hexValue": "4e6f7420617574686f72697a6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1375:16:5",
                                    "type": "",
                                    "value": "Not authorized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1348:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1348:44:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1348:44:5"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1401:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1413:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1424:2:5",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1409:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1409:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1401:4:5"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1246:9:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1260:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1095:338:5"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1567:198:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1577:26:5",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1589:9:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1600:2:5",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1585:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1585:18:5"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1577:4:5"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1612:52:5",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1622:42:5",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1616:2:5",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1680:9:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1695:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1703:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1691:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1691:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1673:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1673:34:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1673:34:5"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1727:9:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1738:2:5",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1723:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1723:18:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1747:6:5"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1755:2:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1743:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1743:15:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1716:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1716:43:5"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1716:43:5"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1528:9:5",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1539:6:5",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1547:6:5",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1558:4:5",
                            "type": ""
                          }
                        ],
                        "src": "1438:327:5"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
                  "id": 5,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "233": [
                  {
                    "length": 32,
                    "start": 174
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806310ce19a41461005157806313af4035146100665780638da5cb5b14610079578063c0e24d5e146100a9575b600080fd5b61006461005f36600461023a565b6100de565b005b61006461007436600461023a565b610166565b60005461008c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d07f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100a0565b600154156101335760405162461bcd60e51b815260206004820152601960248201527f4f776e657220616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b600180556000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161012a565b6101c9816101cc565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76910160405180910390a15050565b60006020828403121561024c57600080fd5b81356001600160a01b038116811461026357600080fd5b939250505056fea26469706673582212208da42943df066d011274179073ae32821b0a91dfe7b937dc5c887e5115a4899164736f6c634300080b0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10CE19A4 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xC0E24D5E EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x8C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x1CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x8292FCE18FA69EDF4DB7B94EA2E58241DF0AE57F97E0A6C9B29067028BF92D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 LOG4 0x29 NUMBER 0xDF MOD PUSH14 0x11274179073AE32821B0A91DFE7 0xB9 CALLDATACOPY 0xDC 0x5C DUP9 PUSH31 0x5115A4899164736F6C634300080B0033000000000000000000000000000000 ",
              "sourceMap": "118:234:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:177:0;;;;;;:::i;:::-;;:::i;:::-;;357:145:1;;;;;;:::i;:::-;;:::i;212:29::-;;;;;-1:-1:-1;;;;;212:29:1;;;;;;-1:-1:-1;;;;;492:55:5;;;474:74;;462:2;447:18;212:29:1;;;;;;;;172:36:4;;;;;;;;705:25:5;;;693:2;678:18;172:36:4;559:177:5;271::0;344:11;;:16;336:54;;;;-1:-1:-1;;;336:54:0;;943:2:5;336:54:0;;;925:21:5;982:2;962:18;;;955:30;1021:27;1001:18;;;994:55;1066:18;;336:54:0;;;;;;;;;414:1;400:15;;425:5;:16;;-1:-1:-1;;425:16:0;-1:-1:-1;;;;;425:16:0;;;;;;;;;;271:177::o;357:145:1:-;559:4:0;596:5;-1:-1:-1;;;;;596:5:0;582:10;:19;422:41:1;;;;-1:-1:-1;;;422:41:1;;1297:2:5;422:41:1;;;1279:21:5;1336:2;1316:18;;;1309:30;1375:16;1355:18;;;1348:44;1409:18;;422:41:1;1095:338:5;422:41:1;473:22;485:9;473:11;:22::i;:::-;357:145;:::o;617:170::-;676:18;697:5;;-1:-1:-1;;;;;712:17:1;;;-1:-1:-1;;712:17:1;;;;;;;745:35;;;697:5;;;;1673:34:5;;;1738:2;1723:18;;1716:43;;;;745:35:1;;1585:18:5;745:35:1;;;;;;;666:121;617:170;:::o;14:309:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:5:o"
            },
            "methodIdentifiers": {
              "contractUri()": "c0e24d5e",
              "owner()": "8da5cb5b",
              "setOwner(address)": "13af4035",
              "tw_initializeOwner(address)": "10ce19a4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uri\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"someId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractUri\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"tw_initializeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setOwner(address)\":{\"details\":\"Lets a contract admin set a new owner for the contract. The new owner must be a contract admin.\"},\"tw_initializeOwner(address)\":{\"details\":\"Initializes the owner of the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ConstructorParams.sol\":\"ConstructorParams\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/ThirdwebContract.sol\":{\"keccak256\":\"0x0da29b16a67c01f708943d11b1e42b9bdf9c6d99395401845d9f00530e22753f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b0e86391f7dc937c3ff50324b30c49ed6f58399f45cf47529bc312326646e617\",\"dweb:/ipfs/QmefoozzLddJpDXkLVZ8QF1FjaN6isxt3GTcgourR1kVBn\"]},\"@thirdweb-dev/contracts/feature/Ownable.sol\":{\"keccak256\":\"0xb5d6c19ca84a3ab6030fc752098ab55a80bff67ee76f0ef3986b0a8a1b054750\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac01c088a1af1ec9c84d9211c9f11c24c343ca629a2ed51df821ba02b64a9f21\",\"dweb:/ipfs/QmUroZuiC6yWFXUt2ANhn8ey2o9xoSeK4z2ZMgHx1JAu5j\"]},\"@thirdweb-dev/contracts/feature/interface/IOwnable.sol\":{\"keccak256\":\"0x2c3ea8c3c1688337d3eacf55b055b51689ab03d6906366e0a8c6959b4794d7c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4136249c9207296acc87bf1ea0999ddf786570efe1fd6986ba9347c9998d7a3d\",\"dweb:/ipfs/Qmd726Pcis1DUtuac6VwHuMKodGt8FhtMZm7BXjdx8EX6a\"]},\"@thirdweb-dev/contracts/interfaces/IContractDeployer.sol\":{\"keccak256\":\"0x2b883cf46f6cbf1a162e4ff5fb9f9f31dbf6d85d6c4417ddf0e2376af13d63ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4bd2edacff3d7a7a28987b5bea0cb0fd005db858ac542efcff8af3f806102389\",\"dweb:/ipfs/QmTdc27PFikNeFTKiCDbPHGST5mpe2K6UMqjy7cR5j5RY6\"]},\"contracts/mocks/ConstructorParams.sol\":{\"keccak256\":\"0xf10857e1686dfdc3a91ca506659c84bd3ba184b3f504fba143c356c1aae3b05c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13d0e10d965428ff048aaa4eedea968ecf9c31b2229eac19724cb03bbb2e364f\",\"dweb:/ipfs/QmSt3hpfEmgww6mbii4AiCeJotuycoAhuHzgz7oSFSoPYM\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@thirdweb-dev/contracts/ThirdwebContract.sol": {
        "ast": {
          "absolutePath": "@thirdweb-dev/contracts/ThirdwebContract.sol",
          "exportedSymbols": {
            "IContractDeployer": [
              226
            ],
            "IOwnable": [
              166
            ],
            "Ownable": [
              144
            ],
            "ThirdwebContract": [
              90
            ]
          },
          "id": 91,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:0"
            },
            {
              "absolutePath": "@thirdweb-dev/contracts/feature/Ownable.sol",
              "file": "./feature/Ownable.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 91,
              "sourceUnit": 145,
              "src": "64:31:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@thirdweb-dev/contracts/interfaces/IContractDeployer.sol",
              "file": "./interfaces/IContractDeployer.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 91,
              "sourceUnit": 227,
              "src": "96:44:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 144,
                    "src": "171:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "171:7:0"
                }
              ],
              "canonicalName": "ThirdwebContract",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 90,
              "linearizedBaseContracts": [
                90,
                144,
                166
              ],
              "name": "ThirdwebContract",
              "nameLocation": "151:16:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "hasSetOwner",
                  "nameLocation": "201:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "185:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "185:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 28,
                    "nodeType": "Block",
                    "src": "326:122:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 16,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 14,
                                "name": "hasSetOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "344:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 15,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "359:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "344:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e657220616c726561647920696e697469616c697a6564",
                              "id": 17,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "362:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01",
                                "typeString": "literal_string \"Owner already initialized\""
                              },
                              "value": "Owner already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62e34246f49a7bcbc4d9922761502f84f8e016edb7c3287e067b0921ea4fae01",
                                "typeString": "literal_string \"Owner already initialized\""
                              }
                            ],
                            "id": 13,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "336:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 19,
                        "nodeType": "ExpressionStatement",
                        "src": "336:54:0"
                      },
                      {
                        "expression": {
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 20,
                            "name": "hasSetOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "400:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "414:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "400:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23,
                        "nodeType": "ExpressionStatement",
                        "src": "400:15:0"
                      },
                      {
                        "expression": {
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "425:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 25,
                            "name": "deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "433:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "425:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27,
                        "nodeType": "ExpressionStatement",
                        "src": "425:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 8,
                    "nodeType": "StructuredDocumentation",
                    "src": "219:47:0",
                    "text": "@dev Initializes the owner of the contract."
                  },
                  "functionSelector": "10ce19a4",
                  "id": 29,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tw_initializeOwner",
                  "nameLocation": "280:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "307:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "299:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "299:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "298:18:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "326:0:0"
                  },
                  "scope": 90,
                  "src": "271:177:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    143
                  ],
                  "body": {
                    "id": 41,
                    "nodeType": "Block",
                    "src": "565:43:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 36,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "582:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "582:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 38,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "596:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "582:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 35,
                        "id": 40,
                        "nodeType": "Return",
                        "src": "575:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "454:41:0",
                    "text": "@dev Returns whether owner can be set"
                  },
                  "id": 42,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_canSetOwner",
                  "nameLocation": "509:12:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 32,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "541:8:0"
                  },
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "521:2:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "559:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "558:6:0"
                  },
                  "scope": 90,
                  "src": "500:108:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "844:304:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "866:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ThirdwebContract_$90",
                                      "typeString": "contract ThirdwebContract"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ThirdwebContract_$90",
                                      "typeString": "contract ThirdwebContract"
                                    }
                                  ],
                                  "id": 49,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "858:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 48,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "858:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 51,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "858:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "858:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "858:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "887:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "858:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "854:261:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "890:225:0",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 71,
                                    "nodeType": "Block",
                                    "src": "1000:48:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 69,
                                          "name": "deployer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 67,
                                          "src": "1025:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "functionReturnParameters": 47,
                                        "id": 70,
                                        "nodeType": "Return",
                                        "src": "1018:15:0"
                                      }
                                    ]
                                  },
                                  "errorName": "",
                                  "id": 72,
                                  "nodeType": "TryCatchClause",
                                  "parameters": {
                                    "id": 68,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                      {
                                        "constant": false,
                                        "id": 67,
                                        "mutability": "mutable",
                                        "name": "deployer",
                                        "nameLocation": "990:8:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 72,
                                        "src": "982:16:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 66,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "982:7:0",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "src": "981:18:0"
                                  },
                                  "src": "973:75:0"
                                },
                                {
                                  "block": {
                                    "id": 78,
                                    "nodeType": "Block",
                                    "src": "1055:50:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 75,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1088:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "id": 74,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1080:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 73,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1080:7:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 76,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1080:10:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "functionReturnParameters": 47,
                                        "id": 77,
                                        "nodeType": "Return",
                                        "src": "1073:17:0"
                                      }
                                    ]
                                  },
                                  "errorName": "",
                                  "id": 79,
                                  "nodeType": "TryCatchClause",
                                  "src": "1049:56:0"
                                }
                              ],
                              "externalCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 63,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "966:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ThirdwebContract_$90",
                                          "typeString": "contract ThirdwebContract"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ThirdwebContract_$90",
                                          "typeString": "contract ThirdwebContract"
                                        }
                                      ],
                                      "id": 62,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "958:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 61,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "958:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 64,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "958:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 57,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "926:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "926:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 56,
                                      "name": "IContractDeployer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 226,
                                      "src": "908:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IContractDeployer_$226_$",
                                        "typeString": "type(contract IContractDeployer)"
                                      }
                                    },
                                    "id": 59,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "908:29:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IContractDeployer_$226",
                                      "typeString": "contract IContractDeployer"
                                    }
                                  },
                                  "id": 60,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getContractDeployer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 225,
                                  "src": "908:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) view external returns (address)"
                                  }
                                },
                                "id": 65,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "908:64:0",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 80,
                              "nodeType": "TryStatement",
                              "src": "904:201:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1139:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1131:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1131:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1131:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 47,
                        "id": 87,
                        "nodeType": "Return",
                        "src": "1124:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "614:164:0",
                    "text": "@dev Enable access to the original contract deployer in the constructor. If this function is called outside of a constructor, it will return address(0) instead."
                  },
                  "id": 89,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contractDeployer",
                  "nameLocation": "792:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "809:2:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "835:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "835:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "834:9:0"
                  },
                  "scope": 90,
                  "src": "783:365:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 91,
              "src": "142:1008:0",
              "usedErrors": []
            }
          ],
          "src": "39:1112:0"
        },
        "id": 0
      },
      "@thirdweb-dev/contracts/feature/Ownable.sol": {
        "ast": {
          "absolutePath": "@thirdweb-dev/contracts/feature/Ownable.sol",
          "exportedSymbols": {
            "IOwnable": [
              166
            ],
            "Ownable": [
              144
            ]
          },
          "id": 145,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 92,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:1"
            },
            {
              "absolutePath": "@thirdweb-dev/contracts/feature/interface/IOwnable.sol",
              "file": "./interface/IOwnable.sol",
              "id": 93,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 145,
              "sourceUnit": 167,
              "src": "64:34:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 94,
                    "name": "IOwnable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 166,
                    "src": "129:8:1"
                  },
                  "id": 95,
                  "nodeType": "InheritanceSpecifier",
                  "src": "129:8:1"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": false,
              "id": 144,
              "linearizedBaseContracts": [
                144,
                166
              ],
              "name": "Ownable",
              "nameLocation": "118:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    152
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 96,
                    "nodeType": "StructuredDocumentation",
                    "src": "144:63:1",
                    "text": "@dev Owner of the contract (purpose: OpenSea compatibility)"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 99,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "236:5:1",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 98,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "227:8:1"
                  },
                  "scope": 144,
                  "src": "212:29:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    158
                  ],
                  "body": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "412:90:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 107,
                                "name": "_canSetOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "430:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                                  "typeString": "function () returns (bool)"
                                }
                              },
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "430:14:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a6564",
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "446:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              },
                              "value": "Not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                                "typeString": "literal_string \"Not authorized\""
                              }
                            ],
                            "id": 106,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "422:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "422:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "422:41:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 113,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "485:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 112,
                            "name": "_setupOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "473:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "473:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "473:22:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 100,
                    "nodeType": "StructuredDocumentation",
                    "src": "248:104:1",
                    "text": "@dev Lets a contract admin set a new owner for the contract. The new owner must be a contract admin."
                  },
                  "functionSelector": "13af4035",
                  "id": 117,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOwner",
                  "nameLocation": "366:8:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 104,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "403:8:1"
                  },
                  "parameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "383:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 117,
                        "src": "375:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "374:19:1"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "412:0:1"
                  },
                  "scope": 144,
                  "src": "357:145:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "666:121:1",
                    "statements": [
                      {
                        "assignments": [
                          124
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 124,
                            "mutability": "mutable",
                            "name": "_prevOwner",
                            "nameLocation": "684:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 136,
                            "src": "676:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "676:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 126,
                        "initialValue": {
                          "id": 125,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "697:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "676:26:1"
                      },
                      {
                        "expression": {
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 127,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "712:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 128,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "720:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "712:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "712:17:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 132,
                              "name": "_prevOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "758:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 133,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "770:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 131,
                            "name": "OwnerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "745:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "745:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "EmitStatement",
                        "src": "740:40:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 118,
                    "nodeType": "StructuredDocumentation",
                    "src": "508:104:1",
                    "text": "@dev Lets a contract admin set a new owner for the contract. The new owner must be a contract admin."
                  },
                  "id": 137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setupOwner",
                  "nameLocation": "626:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "646:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "638:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "637:19:1"
                  },
                  "returnParameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "666:0:1"
                  },
                  "scope": 144,
                  "src": "617:170:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "793:73:1",
                    "text": "@dev Returns whether owner can be set in the given execution context."
                  },
                  "id": 143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_canSetOwner",
                  "nameLocation": "880:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:1"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "921:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "921:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "920:6:1"
                  },
                  "scope": 144,
                  "src": "871:56:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 145,
              "src": "100:829:1",
              "usedErrors": []
            }
          ],
          "src": "39:891:1"
        },
        "id": 1
      },
      "@thirdweb-dev/contracts/feature/interface/IOwnable.sol": {
        "ast": {
          "absolutePath": "@thirdweb-dev/contracts/feature/interface/IOwnable.sol",
          "exportedSymbols": {
            "IOwnable": [
              166
            ]
          },
          "id": 167,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 146,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOwnable",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 166,
              "linearizedBaseContracts": [
                166
              ],
              "name": "IOwnable",
              "nameLocation": "74:8:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "89:43:2",
                    "text": "@dev Returns the owner of the contract."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "146:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "151:2:2"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "177:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "177:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "176:9:2"
                  },
                  "scope": 166,
                  "src": "137:49:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "192:100:2",
                    "text": "@dev Lets a module admin set a new owner for the contract. The new owner must be a module admin."
                  },
                  "functionSelector": "13af4035",
                  "id": 158,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setOwner",
                  "nameLocation": "306:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "323:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 158,
                        "src": "315:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "315:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:19:2"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "342:0:2"
                  },
                  "scope": 166,
                  "src": "297:46:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 159,
                    "nodeType": "StructuredDocumentation",
                    "src": "349:41:2",
                    "text": "@dev Emitted when a new Owner is set."
                  },
                  "id": 165,
                  "name": "OwnerUpdated",
                  "nameLocation": "401:12:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "prevOwner",
                        "nameLocation": "422:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "414:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "414:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "441:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 165,
                        "src": "433:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "413:37:2"
                  },
                  "src": "395:56:2"
                }
              ],
              "scope": 167,
              "src": "64:389:2",
              "usedErrors": []
            }
          ],
          "src": "39:415:2"
        },
        "id": 2
      },
      "@thirdweb-dev/contracts/interfaces/IContractDeployer.sol": {
        "ast": {
          "absolutePath": "@thirdweb-dev/contracts/interfaces/IContractDeployer.sol",
          "exportedSymbols": {
            "IContractDeployer": [
              226
            ]
          },
          "id": 227,
          "license": "Apache-2.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 168,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IContractDeployer",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 226,
              "linearizedBaseContracts": [
                226
              ],
              "name": "IContractDeployer",
              "nameLocation": "74:17:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "98:45:3",
                    "text": "@dev Emitted when the registry is paused."
                  },
                  "id": 173,
                  "name": "Paused",
                  "nameLocation": "154:6:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isPaused",
                        "nameLocation": "166:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "161:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "161:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "160:15:3"
                  },
                  "src": "148:28:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 174,
                    "nodeType": "StructuredDocumentation",
                    "src": "182:45:3",
                    "text": "@dev Emitted when a contract is deployed."
                  },
                  "id": 182,
                  "name": "ContractDeployed",
                  "nameLocation": "238:16:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "271:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "255:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "255:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "publisher",
                        "nameLocation": "297:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "281:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "deployedContract",
                        "nameLocation": "316:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "308:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "254:79:3"
                  },
                  "src": "232:102:3"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "340:658:3",
                    "text": "  @notice Deploys an instance of a published contract directly.\n  @param publisher        The address of the publisher.\n  @param contractBytecode The bytecode of the contract to deploy.\n  @param constructorArgs  The encoded constructor args to deploy the contract with.\n  @param salt             The salt to use in the CREATE2 contract deployment.\n  @param value            The native token value to pass to the contract on deployment.\n  @param publishMetadataUri     The publish metadata URI for the contract to deploy.\n  @return deployedAddress The address of the contract deployed."
                  },
                  "functionSelector": "28f84d4c",
                  "id": 200,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployInstance",
                  "nameLocation": "1012:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "publisher",
                        "nameLocation": "1044:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1036:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1036:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "contractBytecode",
                        "nameLocation": "1076:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1063:29:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "constructorArgs",
                        "nameLocation": "1115:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1102:28:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1148:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1140:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1170:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1162:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1162:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "publishMetadataUri",
                        "nameLocation": "1199:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1185:32:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:197:3"
                  },
                  "returnParameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "deployedAddress",
                        "nameLocation": "1250:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "1242:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1241:25:3"
                  },
                  "scope": 226,
                  "src": "1003:264:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "1273:695:3",
                    "text": "  @notice Deploys a clone pointing to an implementation of a published contract.\n  @param publisher        The address of the publisher.\n  @param implementation   The contract implementation for the clone to point to.\n  @param initializeData   The encoded function call to initialize the contract with.\n  @param salt             The salt to use in the CREATE2 contract deployment.\n  @param value            The native token value to pass to the contract on deployment.\n  @param publishMetadataUri     The publish metadata URI and for the contract to deploy.\n  @return deployedAddress The address of the contract deployed."
                  },
                  "functionSelector": "9e69e62f",
                  "id": 218,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployInstanceProxy",
                  "nameLocation": "1982:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "publisher",
                        "nameLocation": "2019:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2011:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "2046:14:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2038:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "initializeData",
                        "nameLocation": "2083:14:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2070:27:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2070:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "2115:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2107:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2107:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2137:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2129:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2129:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "publishMetadataUri",
                        "nameLocation": "2166:18:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2152:32:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2152:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2001:189:3"
                  },
                  "returnParameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "deployedAddress",
                        "nameLocation": "2217:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "2209:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2209:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2208:25:3"
                  },
                  "scope": 226,
                  "src": "1973:261:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bf775fb2",
                  "id": 225,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractDeployer",
                  "nameLocation": "2249:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nameLocation": "2277:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "2269:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2269:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2268:19:3"
                  },
                  "returnParameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "2311:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2311:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2310:9:3"
                  },
                  "scope": 226,
                  "src": "2240:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 227,
              "src": "64:2258:3",
              "usedErrors": []
            }
          ],
          "src": "39:2284:3"
        },
        "id": 3
      },
      "contracts/mocks/ConstructorParams.sol": {
        "ast": {
          "absolutePath": "contracts/mocks/ConstructorParams.sol",
          "exportedSymbols": {
            "ConstructorParams": [
              252
            ],
            "IContractDeployer": [
              226
            ],
            "IOwnable": [
              166
            ],
            "Ownable": [
              144
            ],
            "ThirdwebContract": [
              90
            ]
          },
          "id": 253,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 228,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "absolutePath": "@thirdweb-dev/contracts/ThirdwebContract.sol",
              "file": "@thirdweb-dev/contracts/ThirdwebContract.sol",
              "id": 229,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 253,
              "sourceUnit": 91,
              "src": "60:54:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 230,
                    "name": "ThirdwebContract",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 90,
                    "src": "148:16:4"
                  },
                  "id": 231,
                  "nodeType": "InheritanceSpecifier",
                  "src": "148:16:4"
                }
              ],
              "canonicalName": "ConstructorParams",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 252,
              "linearizedBaseContracts": [
                252,
                90,
                144,
                166
              ],
              "name": "ConstructorParams",
              "nameLocation": "127:17:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "c0e24d5e",
                  "id": 233,
                  "mutability": "immutable",
                  "name": "contractUri",
                  "nameLocation": "197:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "172:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "contractId",
                  "nameLocation": "223:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "215:18:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 250,
                    "nodeType": "Block",
                    "src": "283:66:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 242,
                            "name": "contractUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "294:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 243,
                            "name": "uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "308:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "294:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "294:17:4"
                      },
                      {
                        "expression": {
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 246,
                            "name": "contractId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "322:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 247,
                            "name": "someId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "335:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "322:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "nodeType": "ExpressionStatement",
                        "src": "322:19:4"
                      }
                    ]
                  },
                  "id": 251,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "262:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "254:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "254:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "someId",
                        "nameLocation": "275:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "267:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "267:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "253:29:4"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "283:0:4"
                  },
                  "scope": 252,
                  "src": "242:107:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 253,
              "src": "118:234:4",
              "usedErrors": []
            }
          ],
          "src": "33:321:4"
        },
        "id": 4
      }
    }
  }
}
